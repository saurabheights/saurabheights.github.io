name: Deploy to GitHub Pages
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
  workflow_dispatch:
    inputs:
      settings:
        required: true
        description: "The path to your Pelican settings file (`pelican`'s `--settings` option), for example: 'publishconf.py'"
        type: string
      requirements:
        required: false
        default: "-r requirements.txt"
        description: "The Python requirements to install, for example to enable markdown and typogrify use: 'pelican[markdown] typogrify' or if you have a requirements file use: '-r requirements.txt'"
        type: string
      output-path:
        required: false
        default: "output/"
        description: "Where to output the generated files (`pelican`'s `--output` option)"
        type: string
      theme:
        required: false
        default: ""
        description: "The GitHub repo URL of a custom theme to use, for example: 'https://github.com/seanh/sidecar.git'"
        type: string
      python:
        required: false
        default: "3.12"
        description: "The version of Python to use, for example: '3.12' (to use the most recent version of Python 3.12, this is faster) or '3.12.1' (to use an exact version, slower)"
        type: string
      siteurl:
        required: false
        default: ""
        description: "The base URL of your web site (Pelican's SITEURL setting). If not passed this will default to the URL of your GitHub Pages site, which is correct in most cases."
        type: string
      feed_domain:
        required: false
        default: ""
        description: "The domain to be prepended to feed URLs (Pelican's FEED_DOMAIN setting). If not passed this will default to the URL of your GitHub Pages site, which is correct in most cases."
        type: string
      deploy:
        required: false
        default: true
        description: "Whether to deploy the site. If true then build the site and deploy it. If false then just test that the site builds successfully but don't deploy anything."
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955  # v4.3.0
      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065  # v5.6.0
        with:
          python-version: ${{ inputs.python || '3.12' }}
      - name: Configure GitHub Pages
        id: pages
        uses: actions/configure-pages@d5606572c479bee637007364c6b4800ac4fc8573  #v5
      - name: Install requirements
        run: pip install {{ inputs.requirements || -r requirements.txt }}
      - name: Download theme and plugins
        run: invoke download-themes
      - name: Build Pelican site
        shell: python
        run: |
          import subprocess

          cmd = "pelican"
          cmd += " --settings ${{ inputs.settings || 'publishconf.py' }}"
          cmd += " --extra-settings"
          cmd += """ SITEURL='"${{ inputs.siteurl || steps.pages.outputs.base_url }}"'"""
          cmd += """ FEED_DOMAIN='"${{ inputs.feed_domain || steps.pages.outputs.base_url }}"'"""
          cmd += " --output ${{ inputs.output-path || 'output/'  }}"
          cmd += " --theme-path themes/Flex"

          subprocess.run(cmd, shell=True, check=True)
      - name: Fix permissions
        run: |
          chmod -c -R +rX "${{ inputs.output-path || 'output/'  }}" | while read line; do
            echo "::warning title=Invalid file permissions automatically fixed::$line"
          done
      - name: Upload artifact
        uses: actions/upload-pages-artifact@56afc609e74202658d3ffba0e8f6dda462b719fa  # v3
        with:
          path: ${{ inputs.output-path || 'output/' }}

  deploy:
    concurrency:
      group: "pages"
      cancel-in-progress: false
    if: ${{ (github.event_name == 'workflow_dispatch' && inputs.deploy == true) || (github.event_name == 'push' && github.ref_type == 'branch' && github.ref_name == github.event.repository.default_branch) }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@d6db90164ac5ed86f2b6aed7e0febac5b3c0c03e  # v4